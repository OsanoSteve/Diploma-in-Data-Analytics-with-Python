{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "dc29e5fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Loading simple delimited excel data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "d0163e9b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "4647abfd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Indicate the file_path\n",
    "file_path=('C:/Users/Probook/Downloads/gapdata003.xls')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "61d7a9db",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Load into pandas dataframe\n",
    "df=pd.read_excel(file_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c0b16bd0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "      <td>4207000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "      <td>5730000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "      <td>8150368</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "      <td>8284473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Year  Population  Data quality rating  Data quality  \\\n",
       "0  Afghanistan  1820     3280000                  NaN           NaN   \n",
       "1  Afghanistan  1870     4207000                  NaN           NaN   \n",
       "2  Afghanistan  1913     5730000                  NaN           NaN   \n",
       "3  Afghanistan  1950     8150368                  NaN           NaN   \n",
       "4  Afghanistan  1951     8284473                  NaN           NaN   \n",
       "\n",
       "   Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "0                   NaN            NaN            NaN                    NaN   \n",
       "1                   NaN            NaN            NaN                    NaN   \n",
       "2                   NaN            NaN            NaN                    NaN   \n",
       "3                   NaN            NaN            NaN                    NaN   \n",
       "4                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "  Source of gapminder  \n",
       "0    Maddison on-line  \n",
       "1    Maddison on-line  \n",
       "2    Maddison on-line  \n",
       "3    Maddison on-line  \n",
       "4    Maddison on-line  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display first rows of the data\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1a5d2c9d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2002</td>\n",
       "      <td>25268405</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2003</td>\n",
       "      <td>27060359</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2004</td>\n",
       "      <td>28513677</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2005</td>\n",
       "      <td>29928987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2006</td>\n",
       "      <td>31056997</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Year  Population  Data quality rating  Data quality  \\\n",
       "55  Afghanistan  2002    25268405                  NaN           NaN   \n",
       "56  Afghanistan  2003    27060359                  NaN           NaN   \n",
       "57  Afghanistan  2004    28513677                  NaN           NaN   \n",
       "58  Afghanistan  2005    29928987                  NaN           NaN   \n",
       "59  Afghanistan  2006    31056997                  NaN           NaN   \n",
       "\n",
       "    Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "55                   NaN            NaN            NaN                    NaN   \n",
       "56                   NaN            NaN            NaN                    NaN   \n",
       "57                   NaN            NaN            NaN                    NaN   \n",
       "58                   NaN            NaN            NaN                    NaN   \n",
       "59                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "   Source of gapminder  \n",
       "55    Maddison on-line  \n",
       "56    Maddison on-line  \n",
       "57    Maddison on-line  \n",
       "58    Maddison on-line  \n",
       "59    Maddison on-line  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display last rows of the data\n",
    "df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6dac2e67",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "      <td>4207000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "      <td>5730000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "      <td>8150368</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "      <td>8284473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1952</td>\n",
       "      <td>8425333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1953</td>\n",
       "      <td>8573217</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1954</td>\n",
       "      <td>8728408</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1955</td>\n",
       "      <td>8891209</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1956</td>\n",
       "      <td>9061938</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1957</td>\n",
       "      <td>9240934</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1958</td>\n",
       "      <td>9428556</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1959</td>\n",
       "      <td>9624606</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1960</td>\n",
       "      <td>9829450</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1961</td>\n",
       "      <td>10043473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1962</td>\n",
       "      <td>10267083</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1963</td>\n",
       "      <td>10500711</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1964</td>\n",
       "      <td>10744167</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1965</td>\n",
       "      <td>10997885</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1966</td>\n",
       "      <td>11262324</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1967</td>\n",
       "      <td>11537966</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1968</td>\n",
       "      <td>11825320</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1969</td>\n",
       "      <td>12122740</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1970</td>\n",
       "      <td>12430623</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1971</td>\n",
       "      <td>12749385</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1972</td>\n",
       "      <td>13079460</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1973</td>\n",
       "      <td>13421301</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1974</td>\n",
       "      <td>13772076</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1975</td>\n",
       "      <td>14132019</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1976</td>\n",
       "      <td>14501369</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1977</td>\n",
       "      <td>14880372</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1978</td>\n",
       "      <td>15269281</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1979</td>\n",
       "      <td>15555612</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1980</td>\n",
       "      <td>15112149</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1981</td>\n",
       "      <td>13812973</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1982</td>\n",
       "      <td>12881816</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1983</td>\n",
       "      <td>12934937</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1984</td>\n",
       "      <td>13387737</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1985</td>\n",
       "      <td>13796928</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1986</td>\n",
       "      <td>13856100</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1987</td>\n",
       "      <td>13867957</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1988</td>\n",
       "      <td>14076478</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1989</td>\n",
       "      <td>14511868</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1990</td>\n",
       "      <td>14669339</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1991</td>\n",
       "      <td>14871963</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1992</td>\n",
       "      <td>16317921</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1993</td>\n",
       "      <td>18371583</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1994</td>\n",
       "      <td>19900668</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1995</td>\n",
       "      <td>20881480</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1996</td>\n",
       "      <td>21559923</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1997</td>\n",
       "      <td>22227415</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1998</td>\n",
       "      <td>22912814</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1999</td>\n",
       "      <td>23646128</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2000</td>\n",
       "      <td>23898198</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2001</td>\n",
       "      <td>23997412</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2002</td>\n",
       "      <td>25268405</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2003</td>\n",
       "      <td>27060359</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2004</td>\n",
       "      <td>28513677</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2005</td>\n",
       "      <td>29928987</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2006</td>\n",
       "      <td>31056997</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Year  Population  Data quality rating  Data quality  \\\n",
       "0   Afghanistan  1820     3280000                  NaN           NaN   \n",
       "1   Afghanistan  1870     4207000                  NaN           NaN   \n",
       "2   Afghanistan  1913     5730000                  NaN           NaN   \n",
       "3   Afghanistan  1950     8150368                  NaN           NaN   \n",
       "4   Afghanistan  1951     8284473                  NaN           NaN   \n",
       "5   Afghanistan  1952     8425333                  NaN           NaN   \n",
       "6   Afghanistan  1953     8573217                  NaN           NaN   \n",
       "7   Afghanistan  1954     8728408                  NaN           NaN   \n",
       "8   Afghanistan  1955     8891209                  NaN           NaN   \n",
       "9   Afghanistan  1956     9061938                  NaN           NaN   \n",
       "10  Afghanistan  1957     9240934                  NaN           NaN   \n",
       "11  Afghanistan  1958     9428556                  NaN           NaN   \n",
       "12  Afghanistan  1959     9624606                  NaN           NaN   \n",
       "13  Afghanistan  1960     9829450                  NaN           NaN   \n",
       "14  Afghanistan  1961    10043473                  NaN           NaN   \n",
       "15  Afghanistan  1962    10267083                  NaN           NaN   \n",
       "16  Afghanistan  1963    10500711                  NaN           NaN   \n",
       "17  Afghanistan  1964    10744167                  NaN           NaN   \n",
       "18  Afghanistan  1965    10997885                  NaN           NaN   \n",
       "19  Afghanistan  1966    11262324                  NaN           NaN   \n",
       "20  Afghanistan  1967    11537966                  NaN           NaN   \n",
       "21  Afghanistan  1968    11825320                  NaN           NaN   \n",
       "22  Afghanistan  1969    12122740                  NaN           NaN   \n",
       "23  Afghanistan  1970    12430623                  NaN           NaN   \n",
       "24  Afghanistan  1971    12749385                  NaN           NaN   \n",
       "25  Afghanistan  1972    13079460                  NaN           NaN   \n",
       "26  Afghanistan  1973    13421301                  NaN           NaN   \n",
       "27  Afghanistan  1974    13772076                  NaN           NaN   \n",
       "28  Afghanistan  1975    14132019                  NaN           NaN   \n",
       "29  Afghanistan  1976    14501369                  NaN           NaN   \n",
       "30  Afghanistan  1977    14880372                  NaN           NaN   \n",
       "31  Afghanistan  1978    15269281                  NaN           NaN   \n",
       "32  Afghanistan  1979    15555612                  NaN           NaN   \n",
       "33  Afghanistan  1980    15112149                  NaN           NaN   \n",
       "34  Afghanistan  1981    13812973                  NaN           NaN   \n",
       "35  Afghanistan  1982    12881816                  NaN           NaN   \n",
       "36  Afghanistan  1983    12934937                  NaN           NaN   \n",
       "37  Afghanistan  1984    13387737                  NaN           NaN   \n",
       "38  Afghanistan  1985    13796928                  NaN           NaN   \n",
       "39  Afghanistan  1986    13856100                  NaN           NaN   \n",
       "40  Afghanistan  1987    13867957                  NaN           NaN   \n",
       "41  Afghanistan  1988    14076478                  NaN           NaN   \n",
       "42  Afghanistan  1989    14511868                  NaN           NaN   \n",
       "43  Afghanistan  1990    14669339                  NaN           NaN   \n",
       "44  Afghanistan  1991    14871963                  NaN           NaN   \n",
       "45  Afghanistan  1992    16317921                  NaN           NaN   \n",
       "46  Afghanistan  1993    18371583                  NaN           NaN   \n",
       "47  Afghanistan  1994    19900668                  NaN           NaN   \n",
       "48  Afghanistan  1995    20881480                  NaN           NaN   \n",
       "49  Afghanistan  1996    21559923                  NaN           NaN   \n",
       "50  Afghanistan  1997    22227415                  NaN           NaN   \n",
       "51  Afghanistan  1998    22912814                  NaN           NaN   \n",
       "52  Afghanistan  1999    23646128                  NaN           NaN   \n",
       "53  Afghanistan  2000    23898198                  NaN           NaN   \n",
       "54  Afghanistan  2001    23997412                  NaN           NaN   \n",
       "55  Afghanistan  2002    25268405                  NaN           NaN   \n",
       "56  Afghanistan  2003    27060359                  NaN           NaN   \n",
       "57  Afghanistan  2004    28513677                  NaN           NaN   \n",
       "58  Afghanistan  2005    29928987                  NaN           NaN   \n",
       "59  Afghanistan  2006    31056997                  NaN           NaN   \n",
       "\n",
       "    Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "0                    NaN            NaN            NaN                    NaN   \n",
       "1                    NaN            NaN            NaN                    NaN   \n",
       "2                    NaN            NaN            NaN                    NaN   \n",
       "3                    NaN            NaN            NaN                    NaN   \n",
       "4                    NaN            NaN            NaN                    NaN   \n",
       "5                    NaN            NaN            NaN                    NaN   \n",
       "6                    NaN            NaN            NaN                    NaN   \n",
       "7                    NaN            NaN            NaN                    NaN   \n",
       "8                    NaN            NaN            NaN                    NaN   \n",
       "9                    NaN            NaN            NaN                    NaN   \n",
       "10                   NaN            NaN            NaN                    NaN   \n",
       "11                   NaN            NaN            NaN                    NaN   \n",
       "12                   NaN            NaN            NaN                    NaN   \n",
       "13                   NaN            NaN            NaN                    NaN   \n",
       "14                   NaN            NaN            NaN                    NaN   \n",
       "15                   NaN            NaN            NaN                    NaN   \n",
       "16                   NaN            NaN            NaN                    NaN   \n",
       "17                   NaN            NaN            NaN                    NaN   \n",
       "18                   NaN            NaN            NaN                    NaN   \n",
       "19                   NaN            NaN            NaN                    NaN   \n",
       "20                   NaN            NaN            NaN                    NaN   \n",
       "21                   NaN            NaN            NaN                    NaN   \n",
       "22                   NaN            NaN            NaN                    NaN   \n",
       "23                   NaN            NaN            NaN                    NaN   \n",
       "24                   NaN            NaN            NaN                    NaN   \n",
       "25                   NaN            NaN            NaN                    NaN   \n",
       "26                   NaN            NaN            NaN                    NaN   \n",
       "27                   NaN            NaN            NaN                    NaN   \n",
       "28                   NaN            NaN            NaN                    NaN   \n",
       "29                   NaN            NaN            NaN                    NaN   \n",
       "30                   NaN            NaN            NaN                    NaN   \n",
       "31                   NaN            NaN            NaN                    NaN   \n",
       "32                   NaN            NaN            NaN                    NaN   \n",
       "33                   NaN            NaN            NaN                    NaN   \n",
       "34                   NaN            NaN            NaN                    NaN   \n",
       "35                   NaN            NaN            NaN                    NaN   \n",
       "36                   NaN            NaN            NaN                    NaN   \n",
       "37                   NaN            NaN            NaN                    NaN   \n",
       "38                   NaN            NaN            NaN                    NaN   \n",
       "39                   NaN            NaN            NaN                    NaN   \n",
       "40                   NaN            NaN            NaN                    NaN   \n",
       "41                   NaN            NaN            NaN                    NaN   \n",
       "42                   NaN            NaN            NaN                    NaN   \n",
       "43                   NaN            NaN            NaN                    NaN   \n",
       "44                   NaN            NaN            NaN                    NaN   \n",
       "45                   NaN            NaN            NaN                    NaN   \n",
       "46                   NaN            NaN            NaN                    NaN   \n",
       "47                   NaN            NaN            NaN                    NaN   \n",
       "48                   NaN            NaN            NaN                    NaN   \n",
       "49                   NaN            NaN            NaN                    NaN   \n",
       "50                   NaN            NaN            NaN                    NaN   \n",
       "51                   NaN            NaN            NaN                    NaN   \n",
       "52                   NaN            NaN            NaN                    NaN   \n",
       "53                   NaN            NaN            NaN                    NaN   \n",
       "54                   NaN            NaN            NaN                    NaN   \n",
       "55                   NaN            NaN            NaN                    NaN   \n",
       "56                   NaN            NaN            NaN                    NaN   \n",
       "57                   NaN            NaN            NaN                    NaN   \n",
       "58                   NaN            NaN            NaN                    NaN   \n",
       "59                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "   Source of gapminder  \n",
       "0     Maddison on-line  \n",
       "1     Maddison on-line  \n",
       "2     Maddison on-line  \n",
       "3     Maddison on-line  \n",
       "4     Maddison on-line  \n",
       "5     Maddison on-line  \n",
       "6     Maddison on-line  \n",
       "7     Maddison on-line  \n",
       "8     Maddison on-line  \n",
       "9     Maddison on-line  \n",
       "10    Maddison on-line  \n",
       "11    Maddison on-line  \n",
       "12    Maddison on-line  \n",
       "13    Maddison on-line  \n",
       "14    Maddison on-line  \n",
       "15    Maddison on-line  \n",
       "16    Maddison on-line  \n",
       "17    Maddison on-line  \n",
       "18    Maddison on-line  \n",
       "19    Maddison on-line  \n",
       "20    Maddison on-line  \n",
       "21    Maddison on-line  \n",
       "22    Maddison on-line  \n",
       "23    Maddison on-line  \n",
       "24    Maddison on-line  \n",
       "25    Maddison on-line  \n",
       "26    Maddison on-line  \n",
       "27    Maddison on-line  \n",
       "28    Maddison on-line  \n",
       "29    Maddison on-line  \n",
       "30    Maddison on-line  \n",
       "31    Maddison on-line  \n",
       "32    Maddison on-line  \n",
       "33    Maddison on-line  \n",
       "34    Maddison on-line  \n",
       "35    Maddison on-line  \n",
       "36    Maddison on-line  \n",
       "37    Maddison on-line  \n",
       "38    Maddison on-line  \n",
       "39    Maddison on-line  \n",
       "40    Maddison on-line  \n",
       "41    Maddison on-line  \n",
       "42    Maddison on-line  \n",
       "43    Maddison on-line  \n",
       "44    Maddison on-line  \n",
       "45    Maddison on-line  \n",
       "46    Maddison on-line  \n",
       "47    Maddison on-line  \n",
       "48    Maddison on-line  \n",
       "49    Maddison on-line  \n",
       "50    Maddison on-line  \n",
       "51    Maddison on-line  \n",
       "52    Maddison on-line  \n",
       "53    Maddison on-line  \n",
       "54    Maddison on-line  \n",
       "55    Maddison on-line  \n",
       "56    Maddison on-line  \n",
       "57    Maddison on-line  \n",
       "58    Maddison on-line  \n",
       "59    Maddison on-line  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b32108e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(60, 10)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display the number of rows and columns\n",
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "18ee4640",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Area', 'Year', 'Population', 'Data quality rating', 'Data quality',\n",
       "       'Type of primary data', 'Data footnote', 'Modifications',\n",
       "       'Modification footnote', 'Source of gapminder'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display columns\n",
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a343fc7b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Area                      object\n",
       "Year                       int64\n",
       "Population                 int64\n",
       "Data quality rating      float64\n",
       "Data quality             float64\n",
       "Type of primary data     float64\n",
       "Data footnote            float64\n",
       "Modifications            float64\n",
       "Modification footnote    float64\n",
       "Source of gapminder       object\n",
       "dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display the datatype of each column\n",
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "df051dbc",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 60 entries, 0 to 59\n",
      "Data columns (total 10 columns):\n",
      " #   Column                 Non-Null Count  Dtype  \n",
      "---  ------                 --------------  -----  \n",
      " 0   Area                   60 non-null     object \n",
      " 1   Year                   60 non-null     int64  \n",
      " 2   Population             60 non-null     int64  \n",
      " 3   Data quality rating    0 non-null      float64\n",
      " 4   Data quality           0 non-null      float64\n",
      " 5   Type of primary data   0 non-null      float64\n",
      " 6   Data footnote          0 non-null      float64\n",
      " 7   Modifications          0 non-null      float64\n",
      " 8   Modification footnote  0 non-null      float64\n",
      " 9   Source of gapminder    60 non-null     object \n",
      "dtypes: float64(6), int64(2), object(2)\n",
      "memory usage: 4.8+ KB\n"
     ]
    }
   ],
   "source": [
    "#Display more details about the data\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7c094914",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Get the Area column and save as its own variable\n",
    "Area_df = df['Area']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e8bb1208",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    Afghanistan\n",
       "1    Afghanistan\n",
       "2    Afghanistan\n",
       "3    Afghanistan\n",
       "4    Afghanistan\n",
       "Name: Area, dtype: object"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Area_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "74a5da0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "55    Afghanistan\n",
       "56    Afghanistan\n",
       "57    Afghanistan\n",
       "58    Afghanistan\n",
       "59    Afghanistan\n",
       "Name: Area, dtype: object"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Area_df.tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3a1038a9",
   "metadata": {},
   "outputs": [],
   "source": [
    "Subset=df[['Area','Year','Population']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "964e0aa2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "      <td>4207000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "      <td>5730000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "      <td>8150368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "      <td>8284473</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Year  Population\n",
       "0  Afghanistan  1820     3280000\n",
       "1  Afghanistan  1870     4207000\n",
       "2  Afghanistan  1913     5730000\n",
       "3  Afghanistan  1950     8150368\n",
       "4  Afghanistan  1951     8284473"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2163ac32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Area                          Afghanistan\n",
       "Year                                 1820\n",
       "Population                        3280000\n",
       "Data quality rating                   NaN\n",
       "Data quality                          NaN\n",
       "Type of primary data                  NaN\n",
       "Data footnote                         NaN\n",
       "Modifications                         NaN\n",
       "Modification footnote                 NaN\n",
       "Source of gapminder      Maddison on-line\n",
       "Name: 0, dtype: object"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subset file by index ladel\n",
    "#Get the first row (Remember Python counts from 0)\n",
    "df.loc[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "78754092",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Area                          Afghanistan\n",
       "Year                                 1996\n",
       "Population                       21559923\n",
       "Data quality rating                   NaN\n",
       "Data quality                          NaN\n",
       "Type of primary data                  NaN\n",
       "Data footnote                         NaN\n",
       "Modifications                         NaN\n",
       "Modification footnote                 NaN\n",
       "Source of gapminder      Maddison on-line\n",
       "Name: 49, dtype: object"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get the 50th row (Remember Python counts from 0)\n",
    "df.loc[49]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "c145e26d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2006</td>\n",
       "      <td>31056997</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Year  Population  Data quality rating  Data quality  \\\n",
       "59  Afghanistan  2006    31056997                  NaN           NaN   \n",
       "\n",
       "    Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "59                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "   Source of gapminder  \n",
       "59    Maddison on-line  "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get the last row (Remember Python counts from 0)\n",
    "df.tail(n=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "8c797b5a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1996</td>\n",
       "      <td>21559923</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>2006</td>\n",
       "      <td>31056997</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Year  Population  Data quality rating  Data quality  \\\n",
       "0   Afghanistan  1820     3280000                  NaN           NaN   \n",
       "49  Afghanistan  1996    21559923                  NaN           NaN   \n",
       "59  Afghanistan  2006    31056997                  NaN           NaN   \n",
       "\n",
       "    Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "0                    NaN            NaN            NaN                    NaN   \n",
       "49                   NaN            NaN            NaN                    NaN   \n",
       "59                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "   Source of gapminder  \n",
       "0     Maddison on-line  \n",
       "49    Maddison on-line  \n",
       "59    Maddison on-line  "
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Get the first, 50th and 60th rows (Remember Python counts from 0)\n",
    "df.loc[[0,49,59]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "6f6e07ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Subsetting columns\n",
    "subset=df.loc[:,['Area','Year']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "a4bd7de9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Year\n",
       "0  Afghanistan  1820\n",
       "1  Afghanistan  1870\n",
       "2  Afghanistan  1913\n",
       "3  Afghanistan  1950\n",
       "4  Afghanistan  1951"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b29bc1f3",
   "metadata": {},
   "outputs": [],
   "source": [
    "subset_Area=df.loc[:,'Area']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a854af21",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0    Afghanistan\n",
       "1    Afghanistan\n",
       "2    Afghanistan\n",
       "3    Afghanistan\n",
       "4    Afghanistan\n",
       "Name: Area, dtype: object"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "subset_Area.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "e86dee59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4207000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5730000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>8150368</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8284473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Population  Data quality Source of gapminder\n",
       "0     3280000           NaN    Maddison on-line\n",
       "1     4207000           NaN    Maddison on-line\n",
       "2     5730000           NaN    Maddison on-line\n",
       "3     8150368           NaN    Maddison on-line\n",
       "4     8284473           NaN    Maddison on-line"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subsetting by use of iloc (It allows us to use integers)\n",
    "Subset=df.iloc[:,[2,4,-1]]\n",
    "Subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b2294062",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Subsetting columns by Range(Use list function)\n",
    "#Create a range of integers form 0 to 4 inclusive\n",
    "Small_range=list(range(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "7b1c1ec0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4]"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Small_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "cf0fff19",
   "metadata": {},
   "outputs": [],
   "source": [
    "Subset=df.iloc[:,Small_range]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "944c607a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "      <td>4207000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "      <td>5730000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "      <td>8150368</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "      <td>8284473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Year  Population  Data quality rating  Data quality\n",
       "0  Afghanistan  1820     3280000                  NaN           NaN\n",
       "1  Afghanistan  1870     4207000                  NaN           NaN\n",
       "2  Afghanistan  1913     5730000                  NaN           NaN\n",
       "3  Afghanistan  1950     8150368                  NaN           NaN\n",
       "4  Afghanistan  1951     8284473                  NaN           NaN"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Subset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "f3083deb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Afghanistan'"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subsetting rows and columns simultaneously\n",
    "#using loc (What is the cell name in the 42 label in Area column?)\n",
    "df.loc[42,'Area']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "cec2e830",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Type of primary data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Data quality rating  Type of primary data\n",
       "0   Afghanistan                  NaN                   NaN\n",
       "49  Afghanistan                  NaN                   NaN\n",
       "59  Afghanistan                  NaN                   NaN"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subsetting multiple rows and columns e.g get the 1st, 50th and 60th rows from the 1st, 4th and 6th columns\n",
    "df.iloc[[0,49,59],[0,3,5]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "58b8332e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Type of primary data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           Area  Data quality rating  Type of primary data\n",
       "0   Afghanistan                  NaN                   NaN\n",
       "49  Afghanistan                  NaN                   NaN\n",
       "59  Afghanistan                  NaN                   NaN"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[[0,49,59],['Area','Data quality rating','Type of primary data']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "bae04d79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Type of primary data</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Data quality rating  Type of primary data\n",
       "0  Afghanistan                  NaN                   NaN\n",
       "1  Afghanistan                  NaN                   NaN\n",
       "2  Afghanistan                  NaN                   NaN\n",
       "3  Afghanistan                  NaN                   NaN\n",
       "4  Afghanistan                  NaN                   NaN\n",
       "5  Afghanistan                  NaN                   NaN"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Subsetting multiple rows and columns e.g get from the 1st to 6th rows the 1st, 4th and 6th columns\n",
    "df.loc[0:5,['Area','Data quality rating','Type of primary data']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "16688ede",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Area</th>\n",
       "      <th>Year</th>\n",
       "      <th>Population</th>\n",
       "      <th>Data quality rating</th>\n",
       "      <th>Data quality</th>\n",
       "      <th>Type of primary data</th>\n",
       "      <th>Data footnote</th>\n",
       "      <th>Modifications</th>\n",
       "      <th>Modification footnote</th>\n",
       "      <th>Source of gapminder</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1820</td>\n",
       "      <td>3280000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1870</td>\n",
       "      <td>4207000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1913</td>\n",
       "      <td>5730000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1950</td>\n",
       "      <td>8150368</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1951</td>\n",
       "      <td>8284473</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1952</td>\n",
       "      <td>8425333</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1953</td>\n",
       "      <td>8573217</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1954</td>\n",
       "      <td>8728408</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1955</td>\n",
       "      <td>8891209</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>1956</td>\n",
       "      <td>9061938</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Maddison on-line</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Area  Year  Population  Data quality rating  Data quality  \\\n",
       "0  Afghanistan  1820     3280000                  NaN           NaN   \n",
       "1  Afghanistan  1870     4207000                  NaN           NaN   \n",
       "2  Afghanistan  1913     5730000                  NaN           NaN   \n",
       "3  Afghanistan  1950     8150368                  NaN           NaN   \n",
       "4  Afghanistan  1951     8284473                  NaN           NaN   \n",
       "5  Afghanistan  1952     8425333                  NaN           NaN   \n",
       "6  Afghanistan  1953     8573217                  NaN           NaN   \n",
       "7  Afghanistan  1954     8728408                  NaN           NaN   \n",
       "8  Afghanistan  1955     8891209                  NaN           NaN   \n",
       "9  Afghanistan  1956     9061938                  NaN           NaN   \n",
       "\n",
       "   Type of primary data  Data footnote  Modifications  Modification footnote  \\\n",
       "0                   NaN            NaN            NaN                    NaN   \n",
       "1                   NaN            NaN            NaN                    NaN   \n",
       "2                   NaN            NaN            NaN                    NaN   \n",
       "3                   NaN            NaN            NaN                    NaN   \n",
       "4                   NaN            NaN            NaN                    NaN   \n",
       "5                   NaN            NaN            NaN                    NaN   \n",
       "6                   NaN            NaN            NaN                    NaN   \n",
       "7                   NaN            NaN            NaN                    NaN   \n",
       "8                   NaN            NaN            NaN                    NaN   \n",
       "9                   NaN            NaN            NaN                    NaN   \n",
       "\n",
       "  Source of gapminder  \n",
       "0    Maddison on-line  \n",
       "1    Maddison on-line  \n",
       "2    Maddison on-line  \n",
       "3    Maddison on-line  \n",
       "4    Maddison on-line  \n",
       "5    Maddison on-line  \n",
       "6    Maddison on-line  \n",
       "7    Maddison on-line  \n",
       "8    Maddison on-line  \n",
       "9    Maddison on-line  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Display first 10 rows\n",
    "df.head(n=10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "7ef46e85",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Year\n",
       "1820     3280000.0\n",
       "1870     4207000.0\n",
       "1913     5730000.0\n",
       "1950     8150368.0\n",
       "1951     8284473.0\n",
       "1952     8425333.0\n",
       "1953     8573217.0\n",
       "1954     8728408.0\n",
       "1955     8891209.0\n",
       "1956     9061938.0\n",
       "1957     9240934.0\n",
       "1958     9428556.0\n",
       "1959     9624606.0\n",
       "1960     9829450.0\n",
       "1961    10043473.0\n",
       "1962    10267083.0\n",
       "1963    10500711.0\n",
       "1964    10744167.0\n",
       "1965    10997885.0\n",
       "1966    11262324.0\n",
       "1967    11537966.0\n",
       "1968    11825320.0\n",
       "1969    12122740.0\n",
       "1970    12430623.0\n",
       "1971    12749385.0\n",
       "1972    13079460.0\n",
       "1973    13421301.0\n",
       "1974    13772076.0\n",
       "1975    14132019.0\n",
       "1976    14501369.0\n",
       "1977    14880372.0\n",
       "1978    15269281.0\n",
       "1979    15555612.0\n",
       "1980    15112149.0\n",
       "1981    13812973.0\n",
       "1982    12881816.0\n",
       "1983    12934937.0\n",
       "1984    13387737.0\n",
       "1985    13796928.0\n",
       "1986    13856100.0\n",
       "1987    13867957.0\n",
       "1988    14076478.0\n",
       "1989    14511868.0\n",
       "1990    14669339.0\n",
       "1991    14871963.0\n",
       "1992    16317921.0\n",
       "1993    18371583.0\n",
       "1994    19900668.0\n",
       "1995    20881480.0\n",
       "1996    21559923.0\n",
       "1997    22227415.0\n",
       "1998    22912814.0\n",
       "1999    23646128.0\n",
       "2000    23898198.0\n",
       "2001    23997412.0\n",
       "2002    25268405.0\n",
       "2003    27060359.0\n",
       "2004    28513677.0\n",
       "2005    29928987.0\n",
       "2006    31056997.0\n",
       "Name: Population, dtype: float64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#For each year in our data what was the average population?\n",
    "#We need to split our data into parts by year. then we get the 'population' column and the average\n",
    "#Use GroupBy command\n",
    "df.groupby('Year')['Population'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2713db15",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
